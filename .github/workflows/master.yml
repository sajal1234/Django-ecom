name: Django Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Start ssh-agent and load the private key
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # SSH into EC2 and deploy the application
      - name: SSH Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: 13.53.131.91
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -x
            # Navigate to the correct project directory
            cd /home/ec2-user/Django-ecom
            git pull origin main
            # Create a virtual environment if it doesn't exist
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate
            git pull origin main
            # Install dependencies from requirements.txt
            pip install --upgrade pip
            pip install -r requirements.txt
            # Run migrations
            python manage.py makemigrations
            python manage.py migrate
            # Collect static files
            python manage.py collectstatic --noinput
             # Create Django superuser (if it doesn't already exist)
            echo "from django.contrib.auth import get_user_model; User = get_user_model(); \
              User.objects.filter(username='admin').exists() or \
              User.objects.create_superuser('admin', 'admin@example.com', 'admin')" \
              | python manage.py shell
            # Use Gunicorn to serve the application instead of the development server
            gunicorn djcommerce.wsgi:application --bind 0.0.0.0:8000 --daemon
            python manage.py runserver 0.0.0.0:8000 &
            set +x  # Disable debug mode


#      # SSH into EC2 and deploy the application
#      - name: SSH Deploy to Server
#        uses: appleboy/ssh-action@master
#        with:
#          host: 13.53.131.91
#          username: ec2-user
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          port: 22
#          script: |
#            # Navigate to the project directory
#            cd /home/ec2-user/Django-ecom
#            # Create a virtual environment and activate it
#            python3 -m venv venv
#            source venv/bin/activate
#            # Install dependencies from requirements.txt
#            pip install -r requirements.txt
#            # Run migrations
#            python manage.py migrate
#            # (Optional) Run the Django development server (you can replace this with gunicorn or other server start commands)
#            python manage.py runserver 0.0.0.0:8000 &
#            # You can uncomment these lines to restart gunicorn or nginx if you're using them
##             sudo systemctl restart gunicorn
##             sudo systemctl restart nginx


#name: Django Deploy to EC2
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      # Check out the code
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      # Start ssh-agent and load the private key
#      - name: Set up SSH key
#        uses: webfactory/ssh-agent@v0.5.4
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#
#      # Set up Python
#      - name: Set up Python
#        uses: actions/setup-python@v3
#        with:
#          python-version: '3.12'
#
#      # Install dependencies
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: SSH Deploy to Server
#        uses: appleboy/ssh-action@master
#        with:
#          host: 13.53.131.91
#          username: ec2-user
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          port: 22
#          script: |
#            # Ensure Python 3 is installed
#            sudo yum install python3 -y
#
#            # Ensure pip3 is installed
#            sudo yum install python3-pip -y
#
#            # Check if the virtual environment already exists
#            if [ ! -d "venv" ]; then
#              python3 -m venv venv  # Create virtual environment if it doesn't exist
#            fi
#
#            # Activate the virtual environment
#            source venv/bin/activate
#
#            # Upgrade pip and install requirements
#            pip install --upgrade pip
#            pip install -r requirements.txt
#
#            # Run migrations and start the Django server
#            python manage.py migrate
#            python manage.py runserver